name: 'Build'

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  NuGetDirectory: ${{github.workspace}}/nuget

jobs:
  build-native:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13, macos-latest, ubuntu-24.04-arm, windows-11-arm]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: 'Configure CMake'
      run: cmake -B ${{github.workspace}}/TinyEXR.Native/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}/TinyEXR.Native
    - name: 'Build'
      run: cmake --build ${{github.workspace}}/TinyEXR.Native/build --config ${{env.BUILD_TYPE}}
    - name: 'Upload win'
      if: ${{ startsWith(matrix.os, 'windows') }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ format('TinyEXR.Native-{0}.dll', matrix.os) }}
        if-no-files-found: error
        path: TinyEXR.Native/build/Release/TinyEXR.Native.dll
    - name: 'Upload linux'
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ format('libTinyEXR.Native-{0}.so', matrix.os) }}
        if-no-files-found: error
        path: TinyEXR.Native/build/libTinyEXR.Native.so
    - name: 'Upload macos'
      if: ${{ startsWith(matrix.os, 'macos') }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ format('libTinyEXR.Native-{0}.dylib', matrix.os) }}
        if-no-files-found: error
        path: TinyEXR.Native/build/libTinyEXR.Native.dylib
